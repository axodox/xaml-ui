@use 'Common.scss' as common;

.container {
  display: grid;
  grid-template-columns: auto 1fr;
  column-gap: 6px;
}

input {
  display: none;
}

input[type="checkbox"]:checked + .checkBox > .checkMark {
  display: grid;
}

input[type="checkbox"]:not(:checked):not(:hover):not(:active):not(:disabled) + .checkBox {
  background-color: common.$ControlAltFillColorSecondaryLight;
  border-color: common.$ControlStrongStrokeColorDefaultLight;
  
  @media (prefers-color-scheme: dark) {
    background-color: common.$ControlAltFillColorSecondaryDark;
    border-color: common.$ControlStrongStrokeColorDefaultDark;
  }
}

input[type="checkbox"]:not(:checked):hover:not(:active):not(:disabled) + .checkBox {
  background-color: common.$ControlAltFillColorTertiaryLight;
  border-color: common.$ControlStrongStrokeColorDefaultLight;
  
  @media (prefers-color-scheme: dark) {
    background-color: common.$ControlAltFillColorTertiaryDark;
    border-color: common.$ControlStrongStrokeColorDefaultDark;
  }
}

input[type="checkbox"]:not(:checked):active + .checkBox {
  background-color: common.$SubtleFillColorTransparentLight;
  border-color: common.$ControlStrongStrokeColorDisabledLight;
  
  @media (prefers-color-scheme: dark) {
    background-color: common.$SubtleFillColorTransparentDark;
    border-color: common.$ControlStrongStrokeColorDisabledDark;
  }
}

input[type="checkbox"]:checked:not(:hover):not(:disabled) + .checkBox {
  background-color: common.$AccentFillColorDefaultLight;
  border-color: common.$AccentFillColorDefaultLight;
  
  @media (prefers-color-scheme: dark) {
    background-color: common.$AccentFillColorDefaultDark;
    border-color: common.$AccentFillColorDefaultDark;
  }
}

input[type="checkbox"]:checked:hover:not(:disabled) + .checkBox {
  background-color: common.$AccentFillColorSecondaryLight;
  border-color: common.$AccentFillColorSecondaryLight;
  
  @media (prefers-color-scheme: dark) {
    background-color: common.$AccentFillColorSecondaryDark;
    border-color: common.$AccentFillColorSecondaryDark;
  }
}

input[type="checkbox"]:checked:active:not(:disabled) + .checkBox {
  background-color: common.$AccentFillColorTertiaryLight;
  border-color: common.$AccentFillColorTertiaryLight;

  & > .checkMark {
    color: common.$TextOnAccentFillColorSecondaryLight;
  }
  
  @media (prefers-color-scheme: dark) {
    background-color: common.$AccentFillColorTertiaryDark;
    border-color: common.$AccentFillColorTertiaryDark;

    & > .checkMark {
      color: common.$TextOnAccentFillColorSecondaryDark;
    }
  }
}

input[type="checkbox"]:not(:checked):disabled + .checkBox {
  background-color: common.$ControlAltFillColorDisabledLight;
  border-color: common.$ControlStrongStrokeColorDisabledLight;
  
  @media (prefers-color-scheme: dark) {
    background-color: common.$ControlAltFillColorDisabledDark;
    border-color: common.$ControlStrongStrokeColorDisabledDark;
  }
}

input[type="checkbox"]:checked:disabled + .checkBox {
  background-color: common.$AccentFillColorDisabledLight;
  border-color: common.$ControlStrongStrokeColorDisabledLight;

  & > .checkMark {
    color: common.$TextOnAccentFillColorDisabledLight;
  }
  
  @media (prefers-color-scheme: dark) {
    background-color: common.$AccentFillColorDisabledDark;
    border-color: common.$ControlStrongStrokeColorDisabledDark;

    & > .checkMark {
      color: common.$TextOnAccentFillColorDisabledDark;
    }
  }
}
  
.checkBox {
  display: grid;
  width: 20px;
  height: 20px;
  border-radius: common.$ControlCornerRadius;
  border-style: solid;
  border-width: common.$ControlBorderThickness;

  //transition: border-color common.$ControlNormalAnimationDuration;
  //transition: background-color common.$ControlNormalAnimationDuration;
}

.checkMark {
  display: none;
  font-family: common.$SymbolFontFamily;
  font-size: 12pt;
  align-self: center;
  justify-self: center;
  color: common.$TextOnAccentFillColorPrimaryLight;
  //transition: color common.$ControlNormalAnimationDuration;
  
  @media (prefers-color-scheme: dark) {
    color: common.$TextOnAccentFillColorPrimaryDark;
  }
}

.content {
  align-self: center;
}