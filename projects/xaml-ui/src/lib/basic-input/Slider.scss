@use '../Common.scss' as *;

$thumb-radius: 8px;
$thumb-size: calc(2 * $thumb-radius);
$track-thickness: 4px;
$track-margin: calc(0.5 * ($thumb-size - $track-thickness));
$thumb-offset: calc(-#{$track-margin});

:host {
  display: grid;
}

.track {
  display: grid;
  background-color: var(--ControlStrongFillColorDefault);
  border-radius: calc(0.5 * $track-thickness);

  &>.usable-range {
    container-type: size;
  }

  &.horizontal {
    height: $track-thickness;
    margin: $track-margin 0;

    background:
      linear-gradient(to right,
        var(--AccentFillColorDefault) 0 var(--progress-percent),
        var(--ControlStrongFillColorDefault) var(--progress-percent) 100%);

    &>.usable-range {
      margin: 0 $thumb-radius;
    }
  }

  &.vertical {
    width: $track-thickness;
    margin: 0 $track-margin;

    background:
      linear-gradient(to top,
        var(--AccentFillColorDefault) 0 var(--progress-percent),
        var(--ControlStrongFillColorDefault) var(--progress-percent) 100%);

    &>.usable-range {
      margin: $thumb-radius 0;
    }
  }

  &.disabled {
    background: var(--ControlStrongFillColorDisabled);
  }
}

.thumb {
  display: grid;
  box-sizing: border-box;
  border-radius: 50%;
  width: $thumb-size;
  height: $thumb-size;
  box-sizing: border-box;

  border: 1px solid var(--ControlStrokeColorOnAccentDefaultDark);
  background-color: var(--ControlSolidFillColorDefault);

  &.horizontal {
    transform: translate(calc(var(--progress-size) - $thumb-radius), $thumb-offset);
  }

  &.vertical {
    transform: translate($thumb-offset, calc(100cqh - var(--progress-size) - $thumb-radius));
  }

  &>.handle {
    place-self: center;
    background-color: var(--AccentFillColorDefault);
    width: 8px;
    height: 8px;
    border-radius: 50%;
    transition: transform var(--ControlFastAnimationDuration), background-color var(--ControlFastAnimationDuration);
  }

  &:not(.disabled) {
    &:hover>.handle {
      transform: scale(125%);
      background-color: var(--AccentFillColorSecondary);
    }

    &:active>.handle {
      transform: scale(75%);
      background-color: var(--AccentFillColorTertiary);
    }
  }

  &.disabled>.handle {
    transform: scale(125%);
    background-color: var(--AccentFillColorDisabled);
  }
}